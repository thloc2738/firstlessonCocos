{"version":3,"sources":["player.js"],"names":["cc","Class","extends","Component","properties","target","Node","isTouch","deltatime","onLoad","manager","director","getCollisionManager","enabled","enabledDebugDraw","spAnim","setEventListener","entry","event","data","log","name","start","onCollisionEnter","other","self","console","onCollisionStay","onCollisionExit","update","dt","y"],"mappings":";;;;;;AACAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,gBAAQL,GAAGM,IADH;AAERC,iBAAS,KAFD;AAGRC,mBAAW;;AAHH,KAHP;;AAUL;;AAEAC,UAZK,oBAYI;AACL,YAAIC,UAAUV,GAAGW,QAAH,CAAYC,mBAAZ,EAAd;AACAF,gBAAQG,OAAR,GAAkB,IAAlB;AACAH,gBAAQI,gBAAR,GAA2B,IAA3B;AACA,aAAKC,MAAL,CAAYC,gBAAZ,CAA6B,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAAA,gBACnCC,IADmC,GAC1BD,KAD0B,CACnCC,IADmC;;AAE3CnB,eAAGoB,GAAH,CAAOD,KAAKE,IAAZ;AAEH,SAJD;AAKH,KArBI;AAuBLC,SAvBK,mBAuBG,CAEP,CAzBI;;AA0BLC,sBAAkB,0BAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AACrCC,gBAAQN,GAAR,CAAY,oBAAZ;;AAEA,aAAKb,OAAL,GAAe,IAAf;AACH,KA9BI;AA+BLoB,qBAAiB,yBAAUH,KAAV,EAAiBC,IAAjB,EAAuB;AACpCC,gBAAQN,GAAR,CAAY,mBAAZ;AAEH,KAlCI;AAmCLQ,qBAAiB,yBAAUJ,KAAV,EAAiBC,IAAjB,EAAuB;AACpCC,gBAAQN,GAAR,CAAY,mBAAZ;AAEH,KAtCI;AAuCLS,UAvCK,kBAuCEC,EAvCF,EAuCM;AACP,YAAI,KAAKvB,OAAL,IAAgB,KAApB,EAA2B;AACvB,iBAAKF,MAAL,CAAY0B,CAAZ,IAAiBD,KAAK,EAAtB;AACH,SAFD,MAEO;AACH,iBAAKtB,SAAL,IAAkBsB,EAAlB;AACA,gBAAI,KAAKtB,SAAL,IAAkB,CAAtB,EAAyB;AACrB,qBAAKH,MAAL,CAAY0B,CAAZ,IAAiBD,KAAK,EAAtB;AACH;AACJ;AAMJ;AArDI,CAAT","file":"player.js","sourceRoot":"../../../../assets/Script","sourcesContent":["\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        target: cc.Node,\n        isTouch: false,\n        deltatime: 0,\n\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        let manager = cc.director.getCollisionManager();\n        manager.enabled = true;\n        manager.enabledDebugDraw = true;\n        this.spAnim.setEventListener((entry, event) => {\n            const { data } = event;\n            cc.log(data.name);\n\n        });\n    },\n\n    start() {\n\n    },\n    onCollisionEnter: function (other, self) {\n        console.log('on collision enter');\n\n        this.isTouch = true;\n    },\n    onCollisionStay: function (other, self) {\n        console.log('on collision stay');\n\n    },\n    onCollisionExit: function (other, self) {\n        console.log('on collision exit');\n\n    },\n    update(dt) {\n        if (this.isTouch == false) {\n            this.target.y -= dt * 50;\n        } else {\n            this.deltatime += dt;\n            if (this.deltatime >= 2) {\n                this.target.y += dt * 50;\n            }\n        }\n\n\n\n\n\n    },\n});\n"]}